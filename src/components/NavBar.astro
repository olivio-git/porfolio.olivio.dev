---
import BarClose from "../utils/Icons/BarClose.astro";
import BarOpen from "../utils/Icons/BarOpen.astro";
import Logo from "../utils/Icons/Logo.astro";
import DropDownBar from "./DropDownBar.astro";

const Fields = [
  {
    name: "Home",
    url: "/#presentation",
  },
  {
    name: "Skills",
    url: "/#skills",
  },
  {
    name: "Projects",
    url: "/#projects",
  }, 
  // {
  //   name: "Contact",
  //   url: "/#contact",
  // },
];
---
<header class="fixed w-full mx-auto flex items-center justify-center z-10">
  <nav
    id="navbar"
    class="bg-white bg-opacity-5 px-2 sm:px-5 md:px-10 lg:px-20 w-full 
    flex justify-between items-center justify-center gap-10"
  >
    <section class="w-full h-18 flex items-center">
      <Logo class="w-20" />
    </section>
    <section
      id="button_open_close"
      class="sm:hidden relative w-12 h-12 flex items-center justify-center cursor-pointer dark:drop-shadow-[0_0_20px_rgba(255,255,255,0.5)]"
    >
      <BarOpen id="bar-open" class="w-6 h-6" />
      <BarClose id="bar-close" class="w-6 h-6 hidden" />
    </section>
    <section
      id="fields"
      class="relative gap-10 hidden sm:flex px-2 py-2 transition hover:text-blue-500 dark:hover:text-blue-500 epilogue-sans"
    >
      {
        Fields.map((field) => (
          <a href={field.url} class="text-[#363B45] dark:text-white font-medium">
            {field.name}
          </a>
        ))
      }
    </section>
    <div
      id="dropdownHover"
      class="z-10 dark:border-1 fixed hidden right-5 top-16 bg-white divide-y divide-gray-100 rounded-md shadow w-44"
    >
      <ul id="fieldsElements" class="py-2 text-sm text-gray-700 dark:text-gray-200">
        {
          Fields.map((field,index) => (
            <li>
              <a
                href={field.url}
                class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"
              >
                {field.name}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </nav>
</header>

<script is:inline>
  const barOpen = document.getElementById("bar-open");
  const barClose = document.getElementById("bar-close");
  const button = document.getElementById("button_open_close");
  const dropdown = document.getElementById("dropdownHover");
  const fields = document.getElementById("fieldsElements");
 
  for (let i = 0; i < fields.children.length; i++) {
    fields.children.item(i).addEventListener("click",()=>{
      dropdown.classList.toggle("hidden", true);
      barClose.classList.add("hidden");
      barOpen.classList.remove("hidden");
    });
  }
 
  const toggleDropdown = (show) => {
    dropdown.classList.toggle("hidden", !show);
    dropdown.classList.toggle("flex", show);  
  };

  const handleDocumentClick = (event) => {
    const isClickInside = dropdown.contains(event.target) || button.contains(event.target);
    if (!isClickInside) {
      toggleDropdown(false);  
      barClose.classList.add("hidden");
      barOpen.classList.remove("hidden");
    }
  };

  const handleToggleClick = () => {
    const isMenuOpen = dropdown.classList.contains("hidden");
    toggleDropdown(isMenuOpen);

    barOpen.classList.toggle("hidden", isMenuOpen);
    barClose.classList.toggle("hidden", !isMenuOpen);
  };

  button.addEventListener("click", handleToggleClick);
  document.addEventListener("click", handleDocumentClick);
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 200px;
  }

  nav {
    @apply dark:bg-gray-950/20 bg-white/50;
  }
  #dropdownHover {
    @apply dark:bg-gray-950/40 bg-white/50;
  }
  #dropdownHover {
    animation: nav-shadown 150ms linear both;
  }
  @keyframes nav-shadown {
    0% {
      @apply dark:bg-gray-950/0 bg-white/0;
    }
    to {
      @apply shadow-lg ring-1 backdrop-blur ring-white/10;
    }
  }
</style>
